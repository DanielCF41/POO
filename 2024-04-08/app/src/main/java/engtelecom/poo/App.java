/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package engtelecom.poo;

import org.checkerframework.checker.units.qual.A;

import java.time.DateTimeException;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.HashMap;
import java.util.Scanner;

public class App {
    HashMap<String, Aluno> bancoDeDados;
    private Scanner teclado = new Scanner(System.in);

    public App(){
        bancoDeDados = new HashMap<>();
    }

    public int menu(){
        System.out.println("..:: SIGAA ::..");
        System.out.println("1 - Cadastrar");
        System.out.println("2 - Atualizar");
        System.out.println("3 - Remover");
        System.out.println("4 - Listar dados de um aluno");
        System.out.println("5 - Listar todos os alunos");
        System.out.println("6 - Sair");

        System.out.println("Opção: ");
        int op = teclado.nextInt();
        teclado.nextLine();
        return op;
    }

    public boolean cadastrar(){
        System.out.println("Nome:");
        String nome = teclado.nextLine();

        System.out.println("Curso:");
        String curso = teclado.nextLine();

        System.out.println("Matricula:");
        String matricula = teclado.nextLine();

        System.out.print("Data de nascimento:");
        LocalDate data = LocalDate.of(2000,10,20);
        DateTimeFormatter df = DateTimeFormatter.ofPattern("dd/MM/yyyy");
        String d = teclado.nextLine();
        data = LocalDate.parse(d, df);

        System.out.println("CPF:");
        String cpf = teclado.nextLine();

        System.out.println("Email:");
        String email = teclado.nextLine();

        Aluno aluno = new Aluno(matricula, nome, curso, email, data, cpf);
        bancoDeDados.put(matricula, aluno);

        return true;
    }

    public boolean atualizar() {
        System.out.println("..:: ATUALIZAR DADOS ALUNO ::..");
        System.out.println("1 - Atualizar nome");
        System.out.println("2 - Atualizar email");
        System.out.println("3 - Atualizar cpf");
        System.out.println("4 - Atualizar data");
        System.out.println("5 - Cancelar atualização");
        int op = teclado.nextInt();
        teclado.nextLine();
        System.out.println("Entre com a matricula:");
        String matricula = teclado.nextLine();
        if (!bancoDeDados.containsKey(matricula)) {
            System.out.println("Matrícula não encontrada!");
            return false;
        } else {
            Aluno aluno = bancoDeDados.get(matricula);
            switch (op) {
                case 1 -> {
                    System.out.print("Nome atualizado:");
                    String nome = teclado.nextLine();
                    aluno.setNome(nome);
                }
                case 2 -> {
                    System.out.println("Email atualizado:");
                    String email = teclado.nextLine();
                    aluno.setEmail(email);
                }
                case 3 -> {
                    System.out.println("CPF atualizado:");
                    String cpf = teclado.nextLine();
                    aluno.setCpf(cpf);
                }
                case 4 -> {
                    System.out.println("Data atualizada:");
                    LocalDate data;
                    DateTimeFormatter df = DateTimeFormatter.ofPattern("dd/MM/yyyy");
                    String d = teclado.nextLine();
                    data = LocalDate.parse(d, df);
                    aluno.setDataNascimento(data);
                }
                case 5 -> System.out.println("Atualização cancelada");
                default -> {
                    System.out.println("Opção inválida");
                    return false;
                }
            }
            return true;
        }
    }

    public boolean remover(){
        System.out.println("..:: REMOVER ALUNO ::..");
        System.out.println("Entre com a matricula:");
        String matricula = teclado.nextLine();

        if(!bancoDeDados.containsKey(matricula)){
            System.out.println("Matrícula não encontrada!");
            return false;
        } else {
          bancoDeDados.remove(matricula);
          System.out.println("ALUNO REMOVIDO COM SUCESSO!");
          return true;
        }
    }

    public boolean listarDadosAluno(){
        System.out.println("..:: DADOS ALUNO ::..");
        System.out.println("Entre com a matricula:");

        String matricula = teclado.nextLine();
        if(!bancoDeDados.containsKey(matricula)){
            System.out.println("Matricula não encontrada!");
            return false;
        }else {
            Aluno aluno = bancoDeDados.get(matricula);
            System.out.println("Nome: " + aluno.getNome());
            System.out.println("Curso: " + aluno.getCurso());
            System.out.println("Matricula: " + aluno.getMatricula());
            System.out.println("Data: " + aluno.getDataNascimento());
            System.out.println("Email: " + aluno.getEmail());
            System.out.println("CPF: " + aluno.getCpf());
            System.out.println("Situação: " + aluno.getSituacao());
            return true;
        }
    }

    public boolean listarDadosTodos(){
        System.out.println("..:: LISTAGEM GERAL ::..");
        bancoDeDados.forEach((chave, valor) -> System.out.println("==================\nMATRICULA: " + chave + "\n" + valor));
        return true;
    }

    public void sair(){
        System.out.println("Saindo");
    }

    public static void main(String[] args) {
        App app = new App();
        int opcao;
        do{
            opcao = app.menu();
            switch (opcao){
                case 1 -> app.cadastrar();
                case 2 -> app.atualizar();
                case 3 -> app.remover();
                case 4 -> app.listarDadosAluno();
                case 5 -> app.listarDadosTodos();
                case 6 -> app.sair();
                default -> System.out.println("Opção incorreta");
            }
        }while (opcao != 6);
        app.bancoDeDados.forEach((chave, valor) -> System.out.println(chave + " " + valor));

    }
}
